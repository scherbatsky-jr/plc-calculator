Grammar:

Rule 0     S' -> statement
Rule 1     statement -> expr
Rule 2     statement -> NAME ASSIGN expr
Rule 3     expr -> NUMBER
Rule 4     expr -> LPAREN expr RPAREN
Rule 5     expr -> MINUS expr  [precedence=right, level=3]
Rule 6     expr -> expr DIVIDE expr  [precedence=left, level=1]
Rule 7     expr -> expr TIMES expr  [precedence=left, level=1]
Rule 8     expr -> expr MINUS expr  [precedence=left, level=2]
Rule 9     expr -> expr + expr  [precedence=left, level=2]

Terminals, with rules where they appear:

+                    : 9
ASSIGN               : 2
DIVIDE               : 6
LPAREN               : 4
MINUS                : 5 8
NAME                 : 2
NUMBER               : 3
RPAREN               : 4
TIMES                : 7
error                : 

Nonterminals, with rules where they appear:

expr                 : 1 2 4 5 6 6 7 7 8 8 9 9
statement            : 0


state 0

    (0) S' -> . statement
    (1) statement -> . expr
    (2) statement -> . NAME ASSIGN expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NAME            shift and go to state 3
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    statement                      shift and go to state 1
    expr                           shift and go to state 2

state 1

    (0) S' -> statement .


state 2

    (1) statement -> expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    $end            reduce using rule 1 (statement -> expr .)
    DIVIDE          shift and go to state 7
    TIMES           shift and go to state 8
    MINUS           shift and go to state 9
    +               shift and go to state 10


state 3

    (2) statement -> NAME . ASSIGN expr
    ASSIGN          shift and go to state 11


state 4

    (3) expr -> NUMBER .
    DIVIDE          reduce using rule 3 (expr -> NUMBER .)
    TIMES           reduce using rule 3 (expr -> NUMBER .)
    MINUS           reduce using rule 3 (expr -> NUMBER .)
    +               reduce using rule 3 (expr -> NUMBER .)
    $end            reduce using rule 3 (expr -> NUMBER .)
    RPAREN          reduce using rule 3 (expr -> NUMBER .)


state 5

    (4) expr -> LPAREN . expr RPAREN
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 12

state 6

    (5) expr -> MINUS . expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 13

state 7

    (6) expr -> expr DIVIDE . expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 14

state 8

    (7) expr -> expr TIMES . expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 15

state 9

    (8) expr -> expr MINUS . expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 16

state 10

    (9) expr -> expr + . expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 17

state 11

    (2) statement -> NAME ASSIGN . expr
    (3) expr -> . NUMBER
    (4) expr -> . LPAREN expr RPAREN
    (5) expr -> . MINUS expr
    (6) expr -> . expr DIVIDE expr
    (7) expr -> . expr TIMES expr
    (8) expr -> . expr MINUS expr
    (9) expr -> . expr + expr
    NUMBER          shift and go to state 4
    LPAREN          shift and go to state 5
    MINUS           shift and go to state 6

    expr                           shift and go to state 18

state 12

    (4) expr -> LPAREN expr . RPAREN
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    RPAREN          shift and go to state 19
    DIVIDE          shift and go to state 7
    TIMES           shift and go to state 8
    MINUS           shift and go to state 9
    +               shift and go to state 10


state 13

    (5) expr -> MINUS expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    DIVIDE          reduce using rule 5 (expr -> MINUS expr .)
    TIMES           reduce using rule 5 (expr -> MINUS expr .)
    MINUS           reduce using rule 5 (expr -> MINUS expr .)
    +               reduce using rule 5 (expr -> MINUS expr .)
    $end            reduce using rule 5 (expr -> MINUS expr .)
    RPAREN          reduce using rule 5 (expr -> MINUS expr .)


state 14

    (6) expr -> expr DIVIDE expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    DIVIDE          reduce using rule 6 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 6 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 6 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 6 (expr -> expr DIVIDE expr .)
    MINUS           shift and go to state 9
    +               shift and go to state 10


state 15

    (7) expr -> expr TIMES expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    DIVIDE          reduce using rule 7 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 7 (expr -> expr TIMES expr .)
    $end            reduce using rule 7 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 7 (expr -> expr TIMES expr .)
    MINUS           shift and go to state 9
    +               shift and go to state 10


state 16

    (8) expr -> expr MINUS expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    DIVIDE          reduce using rule 8 (expr -> expr MINUS expr .)
    TIMES           reduce using rule 8 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 8 (expr -> expr MINUS expr .)
    +               reduce using rule 8 (expr -> expr MINUS expr .)
    $end            reduce using rule 8 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 8 (expr -> expr MINUS expr .)


state 17

    (9) expr -> expr + expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    DIVIDE          reduce using rule 9 (expr -> expr + expr .)
    TIMES           reduce using rule 9 (expr -> expr + expr .)
    MINUS           reduce using rule 9 (expr -> expr + expr .)
    +               reduce using rule 9 (expr -> expr + expr .)
    $end            reduce using rule 9 (expr -> expr + expr .)
    RPAREN          reduce using rule 9 (expr -> expr + expr .)


state 18

    (2) statement -> NAME ASSIGN expr .
    (6) expr -> expr . DIVIDE expr
    (7) expr -> expr . TIMES expr
    (8) expr -> expr . MINUS expr
    (9) expr -> expr . + expr
    $end            reduce using rule 2 (statement -> NAME ASSIGN expr .)
    DIVIDE          shift and go to state 7
    TIMES           shift and go to state 8
    MINUS           shift and go to state 9
    +               shift and go to state 10


state 19

    (4) expr -> LPAREN expr RPAREN .
    DIVIDE          reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    +               reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 4 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 4 (expr -> LPAREN expr RPAREN .)
